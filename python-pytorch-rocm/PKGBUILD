# Maintainer: Samuel Bernard <samuel.bernard@gmail.com>
# largely inspired from python-pytorch PKGFILE
pkgname=python-pytorch-rocm
_pkgname="pytorch"
pkgver=1.4.1
pkgrel=1
pkgdesc="Tensors and Dynamic neural networks in Python with strong GPU acceleration"
arch=('x86_64')
url="https://github.com/pytorch/pytorch"
license=('unknown')
depends=(google-glog gflags opencv openmp pybind11 python python-yaml
  python-numpy ffmpeg python-future
  hip hcc comgr rocrand rocblas miopen rocfft hipsparse rccl rocprim
  hipcub rocthrust comgr)
makedepends=(cmake python-setuptools ninja pkgconfig)
provides=('python-pytorch')
conflicts=('python-pytorch')
source=("${_pkgname}-${pkgver}::git+https://github.com/pytorch/pytorch.git#tag=v$pkgver"
  'https://patch-diff.githubusercontent.com/raw/pytorch/pytorch/pull/35359.patch'
  'fix_include_system.patch'
  '0001-fix-loadHIP-use-RCCL-and-add-some-dirs.patch')
sha256sums=('SKIP'
  '1a67a90174276e9462e632df1bbb2e9fd7890f08da45d831edf1610c0e3e3c72'
  'ec47ff0819fec46639ba48f418d3a842530ba24e1804c5b77abbf735861a8648'
  '4f8510120741a9344f0b4eb8688b19013db8067b4480d6eca35c13c3025a57ed')

get_pyver () {
  python -c 'import sys; print(str(sys.version_info[0]) + "." + str(sys.version_info[1]))'
}

prepare() {
  cd "${srcdir}/${_pkgname}-${pkgver}"

  git submodule update --init --recursive

  # patch relu
  git cherry-pick -n 165403f614ee464050c18707b2b8fbb774dd8d51
  git cherry-pick -n ed3640df68af1a4929b90771b947962d062ead0b

  # fix mixup on dependency name rccl/RCCL and workaround hip/HIP
  patch -Np1 -l -i "${srcdir}/0001-fix-loadHIP-use-RCCL-and-add-some-dirs.patch"

  # https://github.com/pytorch/pytorch/issues/26555
  sed -i 's#^  ${CMAKE_CURRENT_SOURCE_DIR}/tensor_iterator_test.cpp##g' aten/src/ATen/test/CMakeLists.txt

  # https://bugs.archlinux.org/task/64981
  patch -N -l torch/utils/cpp_extension.py "${srcdir}/fix_include_system.patch"

  # https://github.com/pytorch/pytorch/pull/35359
  # patch -Np1 -i "${srcdir}/35359.patch"

  # hipify cuda files and patch some files
  python tools/amd_build/build_amd.py

  # to be sure we use system lib
  rm -fr nccl pybind11
}

build() {
  cd "${srcdir}/${_pkgname}-${pkgver}"

  export USE_CUDA=OFF
  export USE_ROCM=ON
  export USE_FFMPEG=ON
  export USE_GFLAGS=ON
  export USE_GLOG=ON
  export BUILD_BINARY=ON
  export USE_OPENCV=ON
  export USE_SYSTEM_NCCL=ON
  export USE_DISTRIBUTED=OFF
  export CMAKE_C_FLAGS='-w'
  export CMAKE_CXX_FLAGS='-w'
  python setup.py build
}

package() { # from https://git.archlinux.org/svntogit/community.git/tree/trunk/PKGBUILD?h=packages/python-pytorch
  cd "${srcdir}/${_pkgname}-${pkgver}"

  # Prevent setup.py from re-running CMake and rebuilding
  sed -e 's/RUN_BUILD_DEPS = True/RUN_BUILD_DEPS = False/g' -i setup.py

  python setup.py install --root="${pkgdir}"/ --optimize=1 --skip-build

  install -Dm644 LICENSE "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"

  pytorchpath="usr/lib/python$(get_pyver)/site-packages/torch"
  install -d "${pkgdir}/usr/lib"

  # put CMake files in correct place
  mv "${pkgdir}/${pytorchpath}/share/cmake" "${pkgdir}/usr/lib/cmake"

  # put C++ API in correct place
  mv "${pkgdir}/${pytorchpath}/include" "${pkgdir}/usr/include"
  mv "${pkgdir}/${pytorchpath}/lib"/*.so* "${pkgdir}/usr/lib/"

  # clean up duplicates
  # TODO: move towards direct shared library dependecy of:
  #   c10, caffe2, libcpuinfo, CUDA RT, gloo, GTest, Intel MKL,
  #   NVRTC, ONNX, protobuf, libthreadpool, QNNPACK
  rm -rf "${pkgdir}/usr/include/pybind11"

  # python module is hardcoded to look there at runtime
  ln -s /usr/include "${pkgdir}/${pytorchpath}/include"
  find "${pkgdir}"/usr/lib -type f -name "*.so*" -print0 | while read -rd $'\0' _lib; do
    ln -s ${_lib#"$pkgdir"} "${pkgdir}/${pytorchpath}/lib/"
  done
}
